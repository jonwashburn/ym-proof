name: Numerical Verification

on:
  push:
    branches: [ main, feature/* ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run nightly at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # Quick PR gate - builds and runs cached tests
  pr-gate:
    if: github.event_name == 'pull_request' || github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install elan
      run: |
        curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y
        echo "$HOME/.elan/bin" >> $GITHUB_PATH
    
    - name: Get cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/mathlib
          .lake/build
        key: ${{ runner.os }}-lake-${{ hashFiles('lake-manifest.json') }}
        restore-keys: |
          ${{ runner.os }}-lake-
    
    - name: Build project
      run: lake build
    
    - name: Check no sorries
      run: |
        ./scripts/check_sorry.py
        if [ $? -ne 0 ]; then
          echo "::error::Found sorry in codebase"
          exit 1
        fi
    
    - name: Run numerical tests (cached)
      run: lake exe numerical_tests test
    
    - name: Verify envelopes unchanged
      run: |
        # Check that numerical envelopes haven't drifted
        git diff --exit-code YangMillsProof/Numerical/Envelope.lean
        if [ $? -ne 0 ]; then
          echo "::error::Numerical envelopes have changed. Run 'lake exe numerical_tests regen' locally."
          exit 1
        fi

  # Nightly job - full rebuild and envelope regeneration
  nightly-verification:
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install elan
      run: |
        curl https://raw.githubusercontent.com/leanprover/elan/master/elan-init.sh -sSf | sh -s -- -y
        echo "$HOME/.elan/bin" >> $GITHUB_PATH
    
    - name: Clean build
      run: |
        rm -rf .lake/build
        lake clean
    
    - name: Build from scratch
      run: lake build
    
    - name: Regenerate envelopes
      run: lake exe numerical_tests regen
    
    - name: Run full test suite
      run: lake exe numerical_tests test
    
    - name: Check for envelope drift
      id: envelope_check
      run: |
        if ! git diff --quiet YangMillsProof/Numerical/Envelope.lean; then
          echo "envelope_changed=true" >> $GITHUB_OUTPUT
          git diff YangMillsProof/Numerical/Envelope.lean > envelope_diff.txt
        else
          echo "envelope_changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Upload envelope diff
      if: steps.envelope_check.outputs.envelope_changed == 'true'
      uses: actions/upload-artifact@v3
      with:
        name: envelope-drift-${{ github.run_id }}
        path: envelope_diff.txt
    
    - name: Create issue for envelope drift
      if: steps.envelope_check.outputs.envelope_changed == 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const title = 'Numerical envelope drift detected';
          const body = `The nightly verification job detected drift in numerical envelopes.
          
          Run ID: ${{ github.run_id }}
          Date: ${new Date().toISOString()}
          
          Download the artifact to see the specific changes.
          
          To fix:
          1. Review the drift to ensure it's acceptable
          2. Run \`lake exe numerical_tests regen\` locally
          3. Commit the updated envelopes
          `;
          
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['numerical-verification', 'automated']
          });

  # Status badge job
  status:
    if: always()
    needs: [pr-gate, nightly-verification]
    runs-on: ubuntu-latest
    steps:
    - name: Set status
      run: |
        if [[ "${{ needs.pr-gate.result }}" == "success" || "${{ needs.pr-gate.result }}" == "skipped" ]] && \
           [[ "${{ needs.nightly-verification.result }}" == "success" || "${{ needs.nightly-verification.result }}" == "skipped" ]]; then
          echo "All numerical checks passed"
          exit 0
        else
          echo "Numerical verification failed"
          exit 1
        fi 